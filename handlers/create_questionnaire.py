import buttons
from create_bot import dp, bot
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from work_with_db import DataBaseWork
from handlers import viewing_questionnaires, menu, admin
import re
import start_bot

async def is_change_user_name(msg):
    return DataBaseWork().set_data_in_table('user_nickname', msg.from_user.username, msg.from_user.id, 'users')

class MyProfileStates(StatesGroup):
    name = State()
    age = State()
    sex = State()
    who_do_you_like = State()
    city = State()
    dop_info = State()
    description_of_yourself = State()
    photo_or_video = State()
    confirmation = State()
    profile_changes = State()

'''start_myprofile'''
async def start_myprofile_handler(message: types.Message):
    await start_myprofile_module(message)

async def start_myprofile_module(msg):
    if DataBaseWork().is_user_blocked(msg.from_user.id) == False:
        await is_change_user_name(msg)

        await MyProfileStates.name.set()
        await msg.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–µ –∏–º—è (–ø—Ä–æ—Å—Ç–æ –∏–º—è, –±–µ–∑ —Ñ–∞–º–∏–ª–∏–∏ –∏ –æ—Ç—á–µ—Å—Ç–≤–∞) üëá')

async def insert_name_handler(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text == '/start':
            return await start_bot.command_start_module(message)
        if DataBaseWork().get_data_from_profiles_table('changes', message.from_user.id) == 2:
            await message.answer('–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
            await MyProfileStates.age.set()

        else:
            DataBaseWork().set_data_in_table('user_name', message.text, message.from_user.id, 'users')
            await MyProfileStates.age.set()
            await message.answer('–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')


'''insert_age'''
async def insert_age_handler(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text == '/start':
            return await start_bot.command_start_module(message)
        print(type(DataBaseWork().get_data_from_profiles_table('changes', message.from_user.id)),' : ' , DataBaseWork().get_data_from_profiles_table('changes', message.from_user.id))
        if DataBaseWork().get_data_from_profiles_table('changes', message.from_user.id) == 2:
            if message.text.isdigit() == True and int(message.text) > 9 and int(message.text) < 100:
                DataBaseWork().set_data_in_table('age', message.text, message.from_user.id, 'users')
                return await output_from_profile(message)
            else:
                await message.answer('–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã')
        else:
            if message.text.isdigit() == True and int(message.text) > 9 and int(message.text) < 100:
                DataBaseWork().set_data_in_table('age', message.text, message.from_user.id, 'users')
                await MyProfileStates.sex.set()
                await message.answer('–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –ø–æ–ª–æ–º:', reply_markup=buttons.sex)
            else:
                await message.answer('–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã')

'''insert_sex'''
async def insert_sex_handler(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text == '/start':
            return await start_bot.command_start_module(message)

        elif message.text not in ['–Ø –¥–µ–≤—É—à–∫–∞', '–Ø –ø–∞—Ä–µ–Ω—å']:
            await message.answer('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞', reply_markup=buttons.sex)
        else:
            DataBaseWork().set_data_in_table('gender', message.text, message.from_user.id, 'users')
            await MyProfileStates.who_do_you_like.set()
            await message.answer('–ö—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?', reply_markup=buttons.who_do_you_like)

'''insert_who_do_you_like'''
async def insert_who_do_you_like_handler(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text == '/start':
            return await start_bot.command_start_module(message)

        if DataBaseWork().get_data_from_profiles_table('changes', message.from_user.id) == 3:
            await MyProfileStates.city.set()
            await message.answer('–ù–∞–ø–∏—à–∏ —Ç–≤–æ–π –≥–æ—Ä–æ–¥. –ë–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã, —Ä–µ–≥–∏–æ–Ω–∞, —Ü–∏—Ñ—Ä –∏ –Ω–∞—Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µüëá',
                                 reply_markup=buttons.remove_markup)
        else:
            if message.text not in ['–î–µ–≤—É—à–∫–∏', '–ü–∞—Ä–Ω–∏', '–í—Å–µ —Ä–∞–≤–Ω–æ']:
                await message.answer('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞', reply_markup=buttons.who_do_you_like)
            else:
                DataBaseWork().set_data_in_table('opposite', message.text, message.from_user.id, 'users')
                await MyProfileStates.city.set()
                await message.answer('–ù–∞–ø–∏—à–∏ —Ç–≤–æ–π –≥–æ—Ä–æ–¥. –ë–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã, —Ä–µ–≥–∏–æ–Ω–∞, —Ü–∏—Ñ—Ä –∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µüëá',
                                     reply_markup=buttons.remove_markup)
###

async def is_russian(s: str) -> bool:
    return bool(re.fullmatch(r'(?i)[–∞-—è—ë -]+', s))

'''insert_city'''
async def insert_city_handler(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text == '/start':
            return await start_bot.command_start_module(message)

        if DataBaseWork().get_data_from_profiles_table('changes', message.from_user.id) == 3:
            if await is_russian(message.text) == True:
                DataBaseWork().set_data_in_table('city', message.text, message.from_user.id, 'users')
                return await output_from_profile(message)
            else:
                await message.answer('–ù–∞–ø–∏—à–∏ —Ç–≤–æ–π –≥–æ—Ä–æ–¥. –ë–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã, —Ä–µ–≥–∏–æ–Ω–∞, —Ü–∏—Ñ—Ä –∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µüëá', reply_markup=buttons.remove_markup)
        else:
            if await is_russian(message.text) == True:
                DataBaseWork().set_data_in_table('city', message.text, message.from_user.id, 'users')
                await MyProfileStates.dop_info.set()
                
                await message.answer('–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏—è—Ö –∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö. –ù–∞–ø–∏—à–∏ 3 –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è.\n\n'
                                   '–ù–∞–ø—Ä–∏–º–µ—Ä:\n\n'
                                   '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è\n'
                                   '–ö—É–ª–∏–Ω–∞—Ä–∏—è\n'
                                   '–§–∏–ª—å–º—ã\n\n'
                                   '–õ—é–±–ª—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å, –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞. '
                                   '–£–≤–ª–µ–∫–∞—é—Å—å –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ–º —Ä–∞–∑–Ω—ã—Ö –±–ª—é–¥. '
                                   '–í —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è —Å–º–æ—Ç—Ä—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∏–ª—å–º—ã.')
            else:
                await message.answer('–ù–∞–ø–∏—à–∏ —Ç–≤–æ–π –≥–æ—Ä–æ–¥. –ë–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã, —Ä–µ–≥–∏–æ–Ω–∞, —Ü–∏—Ñ—Ä –∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µüëá',
                                     reply_markup=buttons.remove_markup)
        ###
###

'''dop_info'''
async def insert_dop_info_handler(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text == '/start':
            return await start_bot.command_start_module(message)

        DataBaseWork().set_data_in_table('dop_info', message.text, message.from_user.id, 'users')

        if DataBaseWork().get_data_from_profiles_table('changes', message.from_user.id) == 6:
            await output_from_profile(message)
        else:
            await dop_info_module(message)

async def dop_info_module(msg):
    if DataBaseWork().is_user_blocked(msg.from_user.id) == False:
        await is_change_user_name(msg)

        if msg.text == '/start':
            return await start_bot.command_start_module(msg)

        await MyProfileStates.description_of_yourself.set()

        await msg.answer('–ö–æ—Ä–æ—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ –∏ –∫–æ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏, —á–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å –∑–∞–Ω—è—Ç—å—Å—è.'
                             ' –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ª—É—á—à–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ –∫–æ–º–ø–∞–Ω–∏—é.')
###


'''insert_description_of_yourself'''
async def insert_description_of_yourself_handler(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text == '/start':
            return await start_bot.command_start_module(message)
        await insert_description_of_yourself_module(message, False)


async def insert_description_of_yourself_module(msg, flag):
    if DataBaseWork().is_user_blocked(msg.from_user.id) == False:
        await is_change_user_name(msg)

        if msg.text == '/start':
            return await start_bot.command_start_module(msg)
        if flag == False:
            if msg.text == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
                DataBaseWork().set_data_in_table('description', '', msg.from_user.id, 'users')
            else:
                DataBaseWork().set_data_in_table('description', msg.text, msg.from_user.id, 'users')

            if DataBaseWork().get_data_from_profiles_table('changes', msg.from_user.id) == 5:
                return await output_from_profile(msg)

        await MyProfileStates.photo_or_video.set()
        await msg.answer('–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –∑–∞–ø–∏—à–∏ –≤–∏–¥–µ–æ üëç (–¥–æ 15 —Å–µ–∫), –µ–≥–æ –±—É–¥—É—Ç '
                         '–≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', reply_markup=buttons.remove_markup)
###


'''insert_photo_or_video'''
async def insert_photo_or_video_handler(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text == '/start':
            return await start_bot.command_start_module(message)

        if message.photo or message.video:
            await insert_photo_or_video_module(message, False)
        else:
            await message.answer('–ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ (–¥–æ 15 —Å–µ–∫)')


async def insert_photo_or_video_module(msg, flag):
    if DataBaseWork().is_user_blocked(msg.from_user.id) == False:
        await is_change_user_name(msg)

        if msg.text == '/start':
            return await start_bot.command_start_module(msg)
        if flag == False:
            if msg.photo:
                DataBaseWork().set_data_in_table('photo_or_video_id', msg.photo[0].file_id, msg.from_user.id, 'users')
            elif msg.video:
                DataBaseWork().set_data_in_table('photo_or_video_id', msg.video.file_id, msg.from_user.id, 'users')

        await output_from_profile(msg)
###

'''yes_or_no'''
async def yes_or_no_handler(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text == '/start':
            return await start_bot.command_start_module(message)

        elif message.text == '–î–∞':
            DataBaseWork().set_data_in_table('changes', 0, message.from_user.id, 'users')
            await menu.MenuState.menu.set()
            if DataBaseWork().is_exist_user_in_db(message.from_user.id, 'admins') == True:
                await message.answer('–°—É–ø–µ—Ä, —Ç—ã –∑–∞–ø–æ–ª–Ω–∏–ª –ø—Ä–æ—Ñ–∏–ª—å! '
                                     '–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n\n'
                                     'C–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ-—Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ —Å—Ç–∞–≤—å üëç –∏ üëé. '
                                     '–ö–æ–≥–¥–∞ —Ä–µ–∞–∫—Ü–∏—è –±—É–¥–µ—Ç –≤–∑–∞–∏–º–Ω–∞, —Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞.\n\n'
                                     '–ü–æ–≥–Ω–∞–ª–∏!',
                                     reply_markup=buttons.menu_admin)
            else:
                await message.answer('–°—É–ø–µ—Ä, —Ç—ã –∑–∞–ø–æ–ª–Ω–∏–ª –ø—Ä–æ—Ñ–∏–ª—å! '
                                     '–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n\n'
                                     'C–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ-—Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ —Å—Ç–∞–≤—å üëç –∏ üëé. '
                                     '–ö–æ–≥–¥–∞ —Ä–µ–∞–∫—Ü–∏—è –±—É–¥–µ—Ç –≤–∑–∞–∏–º–Ω–∞, —Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞.\n\n'
                                     '–ü–æ–≥–Ω–∞–ª–∏!',
                                     reply_markup=buttons.menu)

        elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É':
            await message.answer('1. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ.\n'
                                 '2. –ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç.\n'
                                 '3. –ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥.\n'
                                 '4. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ.\n'
                                 '5. –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã.\n'
                                 '6. –ò–∑–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä —Å–ª–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞.\n'
                                 '7 üöÄ. –í—Å–µ –≤–µ—Ä–Ω–æ.\n', reply_markup=buttons.numbers)

            await MyProfileStates.profile_changes.set()
        else:
            await message.answer('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞')
###

'''profile_changes'''
async def profile_changes_handler(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text == '/start':
            return await start_bot.command_start_module(message)

        elif message.text == '1':
            DataBaseWork().set_data_in_table('changes', 1, message.from_user.id, 'users')
            DataBaseWork().set_data_in_table('viewed_ids', 'None', message.from_user.id, 'users')
            await start_myprofile_module(message)

        elif message.text == '2':
            DataBaseWork().set_data_in_table('changes', 2, message.from_user.id, 'users')
            DataBaseWork().set_data_in_table('age', -1, message.from_user.id, 'users')
            await insert_name_handler(message)

        elif message.text == '3':
            DataBaseWork().set_data_in_table('changes', 3, message.from_user.id, 'users')
            await insert_who_do_you_like_handler(message)

        elif message.text == '4':
            DataBaseWork().set_data_in_table('changes', 4, message.from_user.id, 'users')
            await insert_description_of_yourself_module(message, True)

        elif message.text == '5':
            DataBaseWork().set_data_in_table('changes', 5, message.from_user.id, 'users')
            await dop_info_module(message)

        elif message.text == '6':
            DataBaseWork().set_data_in_table('changes', 6, message.from_user.id, 'users')
            await MyProfileStates.dop_info.set()
            await message.answer('–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏—è—Ö –∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö. –ù–∞–ø–∏—à–∏ 3 –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è.\n\n'
                               '–ù–∞–ø—Ä–∏–º–µ—Ä:\n\n'
                               '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è\n'
                               '–ö—É–ª–∏–Ω–∞—Ä–∏—è\n'
                               '–§–∏–ª—å–º—ã\n\n'
                               '–õ—é–±–ª—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å, –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞. '
                               '–£–≤–ª–µ–∫–∞—é—Å—å –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ–º —Ä–∞–∑–Ω—ã—Ö –±–ª—é–¥. '
                               '–í —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è —Å–º–æ—Ç—Ä—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∏–ª—å–º—ã.')

        elif message.text == '7 üöÄ':
            DataBaseWork().set_data_in_table('changes', 0, message.from_user.id, 'users')
            await menu.MenuState.menu.set()
            if DataBaseWork().is_exist_user_in_db(message.from_user.id, 'admins') == True:
                await message.answer('–°—É–ø–µ—Ä, —Ç—ã –∑–∞–ø–æ–ª–Ω–∏–ª –ø—Ä–æ—Ñ–∏–ª—å! '
                                     '–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n\n'
                                     'C–º–æ—Ç—Ä–∏ –ø—Ä–æ—Ñ–∏–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ —Å—Ç–∞–≤—å üëç –∏ üëé. '
                                     '–ö–æ–≥–¥–∞ —Ä–µ–∞–∫—Ü–∏—è –±—É–¥–µ—Ç –≤–∑–∞–∏–º–Ω–∞, —Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞.\n\n'
                                     '–ü–æ–≥–Ω–∞–ª–∏!',
                                     reply_markup=buttons.menu_admin)
            else:
                await message.answer('–°—É–ø–µ—Ä, —Ç—ã –∑–∞–ø–æ–ª–Ω–∏–ª –ø—Ä–æ—Ñ–∏–ª—å! '
                                     '–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n\n'
                                     'C–º–æ—Ç—Ä–∏ –ø—Ä–æ—Ñ–∏–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ —Å—Ç–∞–≤—å üëç –∏ üëé. '
                                     '–ö–æ–≥–¥–∞ —Ä–µ–∞–∫—Ü–∏—è –±—É–¥–µ—Ç –≤–∑–∞–∏–º–Ω–∞, —Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞.\n\n'
                                     '–ü–æ–≥–Ω–∞–ª–∏!',
                                     reply_markup=buttons.menu)
###

async def output_from_profile(msg):
    if DataBaseWork().is_user_blocked(msg.from_user.id) == False:
        await msg.answer('–¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:')

        photo_or_video_id = DataBaseWork().get_data_from_profiles_table('photo_or_video_id', msg.from_user.id)

        if photo_or_video_id != '':

            if DataBaseWork().get_data_from_profiles_table('description', msg.from_user.id) == '':
                str = f"{DataBaseWork().get_data_from_profiles_table('user_name', msg.from_user.id)}, " \
                      f"{DataBaseWork().get_data_from_profiles_table('age', msg.from_user.id)}, " \
                      f"{DataBaseWork().get_data_from_profiles_table('city', msg.from_user.id)}.\n\n" \
                      f"{DataBaseWork().get_data_from_profiles_table('dop_info', msg.from_user.id)}"

            else:
                str = f"{DataBaseWork().get_data_from_profiles_table('user_name', msg.from_user.id)}, " \
                      f"{DataBaseWork().get_data_from_profiles_table('age', msg.from_user.id)}, " \
                      f"{DataBaseWork().get_data_from_profiles_table('city', msg.from_user.id)} - " \
                      f"{DataBaseWork().get_data_from_profiles_table('description', msg.from_user.id)}.\n\n" \
                      f"{DataBaseWork().get_data_from_profiles_table('dop_info', msg.from_user.id)}"

            if len(str) >= 1012 - len(DataBaseWork().get_data_from_profiles_table('user_nickname', msg.from_user.id)):
                await bot.send_message(msg.from_user.id, f'–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–π –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤\.\n'
                                                         f'***{len(str)}/1024***\n'
                                                         f'–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ', parse_mode=types.ParseMode.MARKDOWN_V2)
                return await start_myprofile_module(msg)

            try:
                await bot.send_photo(chat_id=msg.from_user.id, photo=photo_or_video_id, caption=str)
            except:
                await bot.send_video(chat_id=msg.from_user.id, video=photo_or_video_id, caption=str)

            await MyProfileStates.confirmation.set()

            await msg.answer('–í—Å–µ –≤–µ—Ä–Ω–æ?', reply_markup=buttons.yes_or_no)
        else:
            await MyProfileStates.confirmation.set()

            await msg.answer('–í—Å–µ –≤–µ—Ä–Ω–æ?', reply_markup=buttons.yes_or_no)

async def is_menu(message: types.Message):
    if DataBaseWork().is_user_blocked(message.from_user.id) == False:
        await is_change_user_name(message)

        if message.text in ['–ù–∞–π—Ç–∏ –¥—Ä—É–≥–∞', 'üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', '–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞','‚õî –°–∫—Ä—ã—Ç—å –∞–Ω–∫–µ—Ç—É', '‚õë –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–æ—Ç–æ–º']:
            await menu.menu_module(message)
        elif message.text == '/start':
            await start_bot.command_start_module(message)

def reg_handlers_questionnaire(dp : Dispatcher):
    dp.register_message_handler(start_myprofile_handler, commands='myprofile', state=None)
    dp.register_message_handler(insert_name_handler, state=MyProfileStates.name)
    dp.register_message_handler(insert_age_handler, state=MyProfileStates.age)
    dp.register_message_handler(insert_sex_handler, state=MyProfileStates.sex)
    dp.register_message_handler(insert_who_do_you_like_handler, state=MyProfileStates.who_do_you_like)
    dp.register_message_handler(insert_city_handler, state=MyProfileStates.city)
    dp.register_message_handler(insert_dop_info_handler, state=MyProfileStates.dop_info)
    dp.register_message_handler(insert_description_of_yourself_handler, state=MyProfileStates.description_of_yourself)
    dp.register_message_handler(insert_photo_or_video_handler, content_types=types.ContentType.ANY, state=MyProfileStates.photo_or_video)
    dp.register_message_handler(yes_or_no_handler, state=MyProfileStates.confirmation)
    dp.register_message_handler(profile_changes_handler, state=MyProfileStates.profile_changes)
    dp.register_message_handler(is_menu, state=menu.MenuState.menu)
